Class: enrol(MoodClass)
    enrolled_users(courseid, [options]): Get enrolled users by course id
        courseid int  required //course id
        options [{'name':'paramname1','value':'paramvalue1'},...] Default to "[]" // Option names
            name (value):
            withcapability (string): return only users with this capability. This option requires 'moodle/role:review' on the course context.
            groupid (integer): return only users in this group id. This option requires 'moodle/site:accessallgroups' on the course context.
            onlyactive (integer): return only users with active enrolments and matching time restrictions. This option requires 'moodle/course:enrolreview' on the course context.
            userfields ('string, string, ...'): return only the values of these user fields.
            limitfrom (integer): sql limit from.
            limitnumber (integer): maximum number of returned users
    get_enrolled_users_with_capability(): For each course and capability specified, return a list of the users that are enrolled in the course and have that capability
        courseid int   //Course ID number in the Moodle course table
        capabilities ['capability1',...] required  // List of capabilities
            capability string required //Capability name, such as mod/forum:viewdiscussion
        options [{'name':'paramname1','value':'paramvalue1'},...] Default to "[]" // Option names
            name (value):
            groupid (integer) return only users in this group id. Requires 'moodle/site:accessallgroups' .
            onlyactive (integer) only users with active enrolments. Requires 'moodle/course:enrolreview' .
            userfields ('string, string, ...') return only the values of these user fields.
            limitfrom (integer) sql limit from.
            limitnumber (integer) max number of users per course and capability.
    get_users_courses(userid): Get the list of courses where a user is enrolled in
        userid int  required // user id
    manual_enrol_users([{'roleid':'roleidvalue','userid':'useridvalue','courseid':'courseidvalue',...},...]): Manual enrol users
        roleid int  required // Role to assign to the user
        userid int  required // The user that is going to be enrolled
        courseid int  required // The course to enrol the user role in
        timestart int  Optional // Timestamp when the enrolment start
        timeend int  Optional // Timestamp when the enrolment end
        suspend int  Optional // set to 1 to suspend the enrolment
